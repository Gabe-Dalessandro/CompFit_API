# Generated by Django 3.1.2 on 2021-02-07 06:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FitnessExperience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fitness_exp_title', models.CharField(max_length=20, unique=True)),
                ('fitness_exp_desc', models.CharField(max_length=160, unique=True)),
            ],
            options={
                'db_table': 'fitness_experience',
            },
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender_desc', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'db_table': 'gender',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=20, null=True)),
                ('last_name', models.CharField(max_length=30, null=True)),
                ('email', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=40)),
                ('phone_number', models.CharField(max_length=10, null=True)),
                ('birthday', models.DateField(null=True)),
                ('total_points', models.IntegerField(null=True)),
                ('fitness_exp', models.ForeignKey(db_column='fitness_exp_title', null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.fitnessexperience', to_field='fitness_exp_title')),
                ('gender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.gender', to_field='gender_desc')),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='WorkoutIntensity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workout_intensity_title', models.CharField(max_length=30, unique=True)),
                ('workout_intensity_desc', models.CharField(max_length=160, unique=True)),
            ],
            options={
                'db_table': 'workout_intensity',
            },
        ),
        migrations.CreateModel(
            name='WorkoutType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workout_type_title', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'workout_type',
            },
        ),
        migrations.CreateModel(
            name='UserWorkoutPreference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='api.user')),
                ('workout_type', models.ForeignKey(db_column='workout_type', on_delete=django.db.models.deletion.CASCADE, to='api.workouttype', to_field='workout_type_title')),
            ],
            options={
                'db_table': 'user_workout_preference',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='workout_intensity',
            field=models.ForeignKey(db_column='workout_intensity_title', null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.workoutintensity', to_field='workout_intensity_title'),
        ),
        migrations.AddField(
            model_name='user',
            name='workout_types',
            field=models.ManyToManyField(through='api.UserWorkoutPreference', to='api.WorkoutType'),
        ),
    ]
